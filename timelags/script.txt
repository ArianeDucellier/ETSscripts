import numpy as np
import os
import obspy
import pickle
from stacking import linstack, powstack, PWstack
os.chdir('/Users/ariane/Documents/Travail/ETSscripts/timelags')

filename = 'BS_-25_015/BS_-25_015'

data = pickle.load(open('cc/' + filename + '_lin.pkl', 'rb'))
EW_UD = data[6]
print('Number of tremor = {}'.format(len(EW_UD)))
dt = EW_UD[0].stats.delta
ncor = int((EW_UD[0].stats.npts - 1) / 2)
t = dt * np.arange(- ncor, ncor + 1)

%run plot_stack_ccorr.py

%run plot_stack_acorr.py

data = pickle.load(open('cc/' + filename + '_lin.pkl', 'rb'))
EW_UD = data[6]
EW_lin = linstack([EW_UD], normalize=False)[0]
i0 = np.argmax(np.abs(EW_lin.data[450:550]))
print('max lin lin = {}'.format(t[450:550][i0]))

EW_pow = powstack([EW_UD], w, normalize=False)[0]
i0 = np.argmax(np.abs(EW_pow.data[450:550]))
print('max lin pow = {}'.format(t[450:550][i0]))

EW_PWS = PWstack([EW_UD], w, normalize=False)[0]
i0 = np.argmax(np.abs(EW_PWS.data[450:550]))
print('max lin PWS = {}'.format(t[450:550][i0]))

data = pickle.load(open('cc/' + filename + '_pow.pkl', 'rb'))
EW_UD = data[6]
EW_lin = linstack([EW_UD], normalize=False)[0]
i0 = np.argmax(np.abs(EW_lin.data[450:550]))
print('max pow lin = {}'.format(t[450:550][i0]))

EW_pow = powstack([EW_UD], w, normalize=False)[0]
i0 = np.argmax(np.abs(EW_pow.data[450:550]))
print('max pow pow = {}'.format(t[450:550][i0]))

EW_PWS = PWstack([EW_UD], w, normalize=False)[0]
i0 = np.argmax(np.abs(EW_PWS.data[450:550]))
print('max pow PWS = {}'.format(t[450:550][i0]))

data = pickle.load(open('cc/' + filename + '_PWS.pkl', 'rb'))
EW_UD = data[6]
EW_lin = linstack([EW_UD], normalize=False)[0]
i0 = np.argmax(np.abs(EW_lin.data[450:550]))
print('max PWS lin = {}'.format(t[450:550][i0]))

EW_pow = powstack([EW_UD], w, normalize=False)[0]
i0 = np.argmax(np.abs(EW_pow.data[450:550]))
print('max PWS pow = {}'.format(t[450:550][i0]))

EW_PWS = PWstack([EW_UD], w, normalize=False)[0]
i0 = np.argmax(np.abs(EW_PWS.data[450:550]))
print('max PWS PWS = {}'.format(t[450:550][i0]))

%run cluster_select.py
